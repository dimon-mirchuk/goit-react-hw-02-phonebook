{"version":3,"sources":["components/ContactAddForm/ContactAddForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactAddForm/ContactAddForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","components/App.js","index.js"],"names":["module","exports","form","styles","label","input","button","ContactAddForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","type","pattern","title","required","onChange","placeholder","Component","item","text","span","ContactListItem","id","onDelete","onClick","ContactList","contacts","length","list","map","contact","key","Filter","Container","children","container","App","filter","handleAddContact","uuidv4","find","toLowerCase","alert","trim","test","handleDeleteContact","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a706ec86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddForm_form__13cIW\",\"label\":\"ContactAddForm_label__1thQQ\",\"input\":\"ContactAddForm_input__nA5eq\",\"button\":\"ContactAddForm_button__gq_-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__38Tsq\",\"text\":\"ContactListItem_text__3MUEn\",\"span\":\"ContactListItem_span__2d8Vr\",\"button\":\"ContactListItem_button__1ggok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1w3qO\",\"input\":\"Filter_input__gufff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3bb9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__11ybr\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactAddForm.module.css\"\n\nconst {form, label, input, button} = styles\n\nclass ContactAddForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => this.setState({ name: \"\", number: \"\" });\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={form}>\n        <label className={label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ]) ? [a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Ivan Ivanov\"\n            className={input}\n          />\n        </label>\n        <label className={label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            value={number}\n            placeholder=\"+7 (999) 999-99-99\"\n            className={input}\n          />\n        </label>\n        <button type=\"submit\" className={button}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactAddForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactAddForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\"\n\nconst {item, text, span, button} = styles\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={item}>\n      <p className={text}>\n        {name}: <span className={span}>{number}</span>\n      </p>\n      <button type=\"button\" onClick={() => onDelete(id)} title=\"Delete\" className={button}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem\";\nimport styles from \"./ContactList.module.css\"\n\nconst ContactList = ({ contacts, onDelete }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.list}>\n      {contacts.map((contact) => (\n        <ContactListItem {...contact} onDelete={onDelete} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\"\n\nconst {label, input} = styles\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        className={input}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport ContactAddForm from \"./ContactAddForm\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\nimport Container from \"./Container\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleAddContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find((contact) => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"Please, enter the contact's name and number phone.\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      alert(\"Please, enter the correct number phone.\");\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  };\n\n  handleDeleteContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactAddForm onSubmit={this.handleAddContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDelete={this.handleDeleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}